worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Add a resolver for Docker's internal DNS
    resolver 127.0.0.11 valid=30s;

    # Add proper MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # TLS configuration
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    
    # Rate limiting configuration
    limit_req_zone $http_cf_connecting_ip zone=mylimit:10m rate=150r/s;
    limit_conn_zone $http_cf_connecting_ip zone=addr:10m;

    # HTTP Server
    server {
        listen 80;
        server_name ${CORS_ORIGIN};
        return 301 https://$host$request_uri;
    }

    # HTTPS Server
    server {
        listen 443 ssl;
        http2 on;
        server_name ${CORS_ORIGIN};
        root /usr/share/nginx/html;
        index index.html;
        
        # SSL certificate configuration
        ssl_certificate /etc/ssl/fullchain.pem;
        ssl_certificate_key /etc/ssl/privkey.pem;
        
        # Apply rate limiting
        limit_req zone=mylimit burst=200 nodelay;
        limit_conn addr 20;

        # Compression settings
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://accounts.google.com https://apis.google.com; connect-src 'self' https://accounts.google.com https://www.googleapis.com; style-src 'self' 'unsafe-inline' https://accounts.google.com; img-src 'self' data: https://*.googleusercontent.com https://accounts.google.com; frame-src https://accounts.google.com;" always;

        # Special Google OAuth callback handling
        location = /api/v1/auth/google/callback {
            proxy_pass http://server:${PORT}/api/v1/auth/google/callback$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # API requests - proxy to node.js backend server
        location ~* ^/api/(.*)$ {
            proxy_pass http://server:${PORT}/api/$1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|json|txt)$ {
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
            try_files $uri =404;
        }

        # Handle React routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 404 error handling
        error_page 404 /index.html;

        # Don't cache HTML
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Don't serve dot files
        location ~ /\. {
            deny all;
        }
    }
}