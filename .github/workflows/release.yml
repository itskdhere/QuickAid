name: Release Docker Images

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io

jobs:
  build-check:
    name: Build Check
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [client, server, ai]
      fail-fast: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (check only)
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build-check
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      matrix:
        service: [client, server, ai]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository_owner }}/quickaid-${{ matrix.service }}
            ${{ env.REGISTRY_GHCR }}/${{ github.repository }}-${{ matrix.service }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=QuickAid ${{ matrix.service }}
            org.opencontainers.image.description=AI Powered Medical Assistance at Your Fingertips - ${{ matrix.service }} service
            org.opencontainers.image.vendor=${{ github.repository_owner }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Generate artifact attestation for Docker Hub
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository_owner }}/quickaid-${{ matrix.service }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for GHCR
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_GHCR }}/${{ github.repository }}-${{ matrix.service }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            # If no previous tag, get all commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            # Get commits since previous tag
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi

          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="No changes since last release."
          fi

          # Save changelog to file
          echo "## What's Changed" > changelog.md
          echo "" >> changelog.md
          echo "$CHANGELOG" >> changelog.md
          echo "" >> changelog.md
          echo "## Docker Images" >> changelog.md
          echo "" >> changelog.md
          echo "### Docker Hub" >> changelog.md
          echo "- \`${{ github.repository_owner }}/quickaid-client:${{ steps.tag.outputs.tag }}\`" >> changelog.md
          echo "- \`${{ github.repository_owner }}/quickaid-server:${{ steps.tag.outputs.tag }}\`" >> changelog.md
          echo "- \`${{ github.repository_owner }}/quickaid-ai:${{ steps.tag.outputs.tag }}\`" >> changelog.md
          echo "" >> changelog.md
          echo "### GitHub Container Registry" >> changelog.md
          echo "- \`ghcr.io/${{ github.repository }}-client:${{ steps.tag.outputs.tag }}\`" >> changelog.md
          echo "- \`ghcr.io/${{ github.repository }}-server:${{ steps.tag.outputs.tag }}\`" >> changelog.md
          echo "- \`ghcr.io/${{ github.repository }}-ai:${{ steps.tag.outputs.tag }}\`" >> changelog.md
          echo "" >> changelog.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${{ steps.tag.outputs.tag }}" >> changelog.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body_path: changelog.md
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.tag, '-') }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
